# some scripting inspiration from: https://github.com/winterfest-2020/unwrap-parcel/blob/master/.github/workflows/issue-ops-encrypt-content.yaml
name: IssueOps - Auto Assign to Project(s)

on:
  issues:
    types: [opened, labeled]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  assign_one_project:
    runs-on: ubuntu-latest
    name: Assign to One Project
    steps:
    - name: Extract project labels
      id: extract
      uses: actions/github-script@v4
      # env:
      #     labels: ${{ toJSON(github.event.issue.labels) }}
      with:
          script: |
            //const { local_labels } = process.env.labels;
            // Are we really supposed to access the payload? context.issue does
            // not contain the labels for some reason.
            const local_labels = context.payload.issue.labels;
            let project_number = -1

            //const { data: local_labels } = await github.issues.listLabelsOnIssue({
            //  owner: context.repo.owner,
            //  repo: context.repo.repo,
            //  issue_number: context.issue.number,
            //});
            //console.log(local_labels)

            for (const label of local_labels) {
              if (label.name.match(/^project_(.*)/)) {
                project_number = label.name.match(/^project_(\d+)/)[1]

                console.log("Project Number extracted from label: " + project_number)
              }
            }

            // retrieve all projects for the repo.
            // then look for the one with the given 'project_number'
            const { data: projects } = await github.projects.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            let local_project
            for (const project of projects) {
              //console.log(project.number + "||" + project_number)
              if (project.number == project_number) {
                local_project = project
                break
              }
            }
            console.log("Found project with URL: " + local_project.html_url)
            core.setOutput('project_url', local_project.html_url)

            // this didn't work. project number and project ID are not the same thing!
            //const project = await github.projects.get({
            //  project_number,
            //});
            //console.log(project)

    - name: Assign issues to project
      uses: srggrs/assign-one-project-github-action@1.2.1
      if: ${{ success() }}
      with:
        project: '${{ steps.extract.outputs.project_url }}'
